@inject IJSRuntime JsRuntime

<MudContainer id="contact" MaxWidth="MaxWidth.Medium">
    <MudStack>
        <MudText Typo="Typo.h4">Contact</MudText>
        <MudForm @ref="form" @bind-IsValid="@success">
            <MudStack>
                <MudTextField T="string" Label="Your e-mail address" @bind-Value="@senderFormData.EmailAddress" Required="true"
                    RequiredError="Email is required!" Variant="Variant.Outlined"
                    Validation="@(new EmailAddressAttribute() {ErrorMessage = "The e-mail address is invalid."})" />
                <MudTextField T="string" Label="Subject" @bind-Value="@senderFormData.Subject" Required="true" RequiredError="Subject is required!"
                    Variant="Variant.Outlined" Immediate="true" />
                <MudTextField T="string" Label="Message" Lines="10" @bind-Value="@senderFormData.Body" Required="true" RequiredError="Message is required!"
                    Variant="Variant.Outlined" Immediate="true" />
                <MudButton Variant="Variant.Filled" Color="Color.Primary" Disabled="@(!success)" class="mx-auto"
                    OnClick="sendEmail">
                    Send Email
                </MudButton>
            </MudStack>
        </MudForm>
    </MudStack>
</MudContainer>

@code {
    bool success;
    MudForm form;
    FormData senderFormData = new FormData();
    private void sendEmail()
    {
        JsRuntime.InvokeAsync<object>("blazorExtensions.sendEmail",
            new object[] { senderFormData.EmailAddress, senderFormData.Subject, senderFormData.Body });
            Console.Write("sendEmail");
    }
}